#include <bits/stdc++.h>
#define int long long
#define pb push_back
using namespace std;

const int maxn=1e5+1;
int h[maxn];
vector<int> adj[maxn];
const int logn=17;
vector<vector<int>> up(maxn,vector<int>(logn,-1));

void dfs(int at, int from) {
    for(int i=1; i<logn; ++i) {
        if(up[at][i-1]==-1) break;
        up[at][i]=up[up[at][i-1]][i-1];
    }
    
    for(int to : adj[at]) {
        if(to==from) continue;
        h[to]=h[at]+1;
        up[to][0]=at;
        dfs(to,at);
    }
}

int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n, a, b;
    cin >> n;
    for(int i=1; i<n; ++i) {
        int u, v;
        cin >> u >> v;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    dfs(1,1);

    cin >> a >> b;
    if(h[a]>h[b]) swap(a,b);
    int mask = h[b]-h[a];
    for(int i=0; (1<<i)<=mask; ++i) {
        if(((1<<i)&mask)) b=up[b][i];
    }
    if(a==b) {
        cout << a;
        return 0;
    }

    for(int i=logn-1; i>=0; --i) {
        if(up[a][i]!=up[b][i]) {
            a=up[a][i];
            b=up[b][i];
        }
    }
    cout << up[a][0];
}
